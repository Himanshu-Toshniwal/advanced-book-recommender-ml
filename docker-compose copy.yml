version: '3.8'

services:
  book-recommender:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book-recommender-app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - book-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.book-recommender.rule=Host(`localhost`)"
      - "traefik.http.services.book-recommender.loadbalancer.server.port=8000"

  # Optional: Add Redis for caching recommendations
  redis:
    image: redis:7-alpine
    container_name: book-recommender-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - book-network
    command: redis-server --appendonly yes

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: book-recommender-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - book-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  book-network:
    driver: bridge